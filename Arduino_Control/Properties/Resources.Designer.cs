//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arduino_Control.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Arduino_Control.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon arduino_22429 {
            get {
                object obj = ResourceManager.GetObject("arduino_22429", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arduino Uno is a widely used microcontroller board based on the ATmega328P microcontroller. It&apos;s the most popular board in the Arduino family due to its simplicity and versatility
        ///
        ///Microcontroller: 
        ///	Arduino Uno is powered by the ATmega328P microcontroller, which has 32KB of flash memory for storing code, 2KB of 	SRAM, and 1KB of EEPROM. It has 16 MHz crystal oscillator to provide the clock signal for the microcontroller
        ///
        ///Digital I/O Pins: 
        ///	It has 14 digital input/output pins, of which 6 can be used  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Arduino_Uno {
            get {
                return ResourceManager.GetString("Arduino_Uno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firstly, you have to upload a dedicated HEX file to communicate with your Arduino Board using this application.
        ///
        ///Click the &quot;Upload (.hex)&quot; button.
        ///
        ///If your Arduino Board is already Connected, you will be asked to disconnect.
        ///
        ///If your Arduino Board is already Disconnected, stay disconnected.
        ///
        ///Browse the necessary files (Avrdude.exe, Avrdude.conf, Arduino_With_C_Sharp.ino.standard.hex) properly.
        ///
        ///Then click the &quot;Find Port&quot; button. A message will appear and ask you to connect your Arduino Board withi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GuideLine {
            get {
                return ResourceManager.GetString("GuideLine", resourceCulture);
            }
        }
    }
}
